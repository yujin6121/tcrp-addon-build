#!/bin/sh

# get context from the first argument
if [ -z "$1" ]; then
    echo "Usage: $0 <context>"
    echo "This script must not be run directly, but as part of a Synology package."
    exit 1
fi

# Set the environment variables for the presets script
export PRESETS_CONTEXT=$1 && shift
export PRESETS_NAME=$(basename "$PRESETS_CONTEXT")

# Guess the package name from the script path
if [ -z "$SYNOPKG_PKGNAME" ]; then
    export SYNOPKG_PKGNAME=$(basename $(readlink -f $(dirname "$0")/..))
fi

# Define extra environment variables for the Synology package
export SYNOPKG_PKGCONF="/var/packages/$SYNOPKG_PKGNAME/etc"
export SYNOPKG_CONF="/var/packages/$SYNOPKG_PKGNAME/conf"

# Source the environment variables from the saved file if it exists
export SYNOPKG_ENVSOURCE="$SYNOPKG_PKGCONF/$PRESETS_NAME.env"
if [ -f "$SYNOPKG_ENVSOURCE" ]; then
    # Load the environment variables from the saved file
    . "$SYNOPKG_ENVSOURCE"
elif [ -d "$SYNOPKG_PKGCONF" ]; then
    env | grep "^SYNOPKG_" | sed 's/^/export /' >"$SYNOPKG_ENVSOURCE"
fi

# Define variables for the Synology package
export WEBAPI_BIN=/usr/syno/bin/synowebapi
export DOCKER_BIN=/usr/local/bin/docker

#container manager
export CONTAINERMANAGER_TARGET_PATH="/var/packages/ContainerManager/target"
export CONTAINERMANAGER_VOLUME="$(/usr/bin/readlink "${CONTAINERMANAGER_TARGET_PATH}" | /usr/bin/cut -d '/' -f2)"
export CONTAINERMANAGER_ETC_PATH="/var/packages/ContainerManager/etc"

# Define the path to the presets file
export PRESETS_FILE="$SYNOPKG_CONF/presets"

# Check if the resource file exists
if [ ! -f "$PRESETS_FILE" ]; then
    echo "Preset config file <$PRESETS_FILE> not available."
    exit 0
fi

# Lists presets requested as resource files in the target path
jq -r 'keys[]' "$PRESETS_FILE" | while read -r preset; do

    if [ -x "$0.$preset" ]; then
        echo "Running preset $0.$preset with arguments: $@"
        "$0.$preset" "$@" || exit $?
    elif [ -x "$PRESETS_CONTEXT.$preset" ]; then
        echo "Running preset $PRESETS_CONTEXT.$preset with arguments: $@"
        $PRESETS_CONTEXT.$preset "$@" || exit $?
    fi
done
