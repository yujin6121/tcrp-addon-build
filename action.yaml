# @format

name: Synology Package Builder Github Action
author: tomgrv
description: Build Synology packages
branding:
    icon: 'package'
    color: 'blue'
inputs:
    dsm:
        description: 'Version of DSM to build for'
        required: true
        default: '7.0'
    arch:
        description: 'Architecture to build for'
        required: true
        default: 'noarch'
    projects:
        description: 'List of project to build (contains a src folder with the package source code, and a synology folder with the package info)'
        required: false
        default: 'default:.'
    config-name:
        description: 'Source file name to generate package info'
        required: false
        default: 'package.json'
    output:
        description: 'Packages folder'
        required: false
        default: './dist'
outputs:
    packages:
        description: 'List of built packages'
        value: ${{ steps.build.outputs.packages }}
runs:
    using: 'composite'
    steps:
        - name: Prepare environment
          id: hash
          run: |
              echo "docker=$(sha256sum ${{ github.action_path }}/dockerfile | cut -c 1-7)" >> $GITHUB_OUTPUT
              echo "build=$(sha256sum ${{ github.action_path }}/build | cut -c 1-7)" >> $GITHUB_OUTPUT
          shell: bash
        - uses: docker/setup-buildx-action@v3
        - uses: docker/build-push-action@v5
          with:
              context: ${{ github.action_path }}
              cache-from: type=gha
              cache-to: type=gha,mode=max
              tags: build:${{ steps.hash.outputs.docker }}${{ steps.hash.outputs.build }}
              load: true
              file: ${{ github.action_path }}/dockerfile
        - uses: actions/cache@v4
          with:
              path: |
                  ${{ github.workspace }}/.toolkit/pkgscripts-ng
                  ${{ github.workspace }}/.toolkit/toolkit_tarballs
              key: toolkit-${{ inputs.dsm }}-${{ inputs.arch }}
        - id: build
          run: /usr/bin/docker run --quiet
              --workdir /workspace --rm --privileged
              --entrypoint "/build"
              $((test -n "${{ github.env }}" && cat ${{ github.env }} || echo "") | sed 's/^\([A-Za-z_][A-Za-z0-9_]*\)=\(.*\)/--e \1=\2/g' )
              -v /var/run/docker.sock:/var/run/docker.sock
              -v /usr/bin/docker:/usr/bin/docker
              -v ${{ github.workspace }}/.toolkit:/toolkit
              -v ${{ github.workspace }}:/workspace
              build:${{ steps.hash.outputs.docker }}${{ steps.hash.outputs.build }}
              -v ${{ inputs.dsm }}
              -p ${{ inputs.arch }}
              -o ${{ inputs.output }}
              -c ${{ inputs.config-name }}
              -s /stubs/src
              -k /stubs/synology
              -b /stubs/SynoBuildConf
              $(echo "${{ inputs.projects }}" | tr '\n' ' ')
          shell: bash
